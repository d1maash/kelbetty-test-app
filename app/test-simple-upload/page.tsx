'use client'

import { useState } from 'react'
import { Button } from '@/components/ui/button'
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'

export default function TestSimpleUploadPage() {
    const [file, setFile] = useState<File | null>(null)
    const [result, setResult] = useState<any>(null)
    const [loading, setLoading] = useState(false)
    const [error, setError] = useState<string | null>(null)

    const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {
        const selectedFile = e.target.files?.[0]
        if (selectedFile) {
            setFile(selectedFile)
            setResult(null)
            setError(null)
        }
    }

    const handleUpload = async () => {
        if (!file) {
            setError('–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏')
            return
        }

        setLoading(true)
        setError(null)

        try {
            const formData = new FormData()
            formData.append('file', file)

            const response = await fetch('/api/test-upload-simple', {
                method: 'POST',
                body: formData,
            })

            const data = await response.json()

            if (response.ok) {
                setResult(data)
            } else {
                setError(data.error || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ')
            }
        } catch (err) {
            setError('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏: ' + (err instanceof Error ? err.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'))
        } finally {
            setLoading(false)
        }
    }

    return (
        <div className="container mx-auto p-6 max-w-4xl">
            <Card>
                <CardHeader>
                    <CardTitle>üß™ –ü—Ä–æ—Å—Ç–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤</CardTitle>
                    <p className="text-muted-foreground">
                        –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä—Å–∏–Ω–≥–∞ —Ñ–∞–π–ª–æ–≤ –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                    </p>
                </CardHeader>
                <CardContent className="space-y-6">
                    {/* File Upload */}
                    <div className="space-y-4">
                        <div>
                            <label className="block text-sm font-medium mb-2">
                                –í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:
                            </label>
                            <input
                                type="file"
                                onChange={handleFileChange}
                                accept=".docx,.pptx,.xlsx,.pdf"
                                className="block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-blue-50 file:text-blue-700 hover:file:bg-blue-100"
                            />
                        </div>

                        {file && (
                            <div className="p-3 bg-gray-50 rounded-lg">
                                <p><strong>–§–∞–π–ª:</strong> {file.name}</p>
                                <p><strong>–¢–∏–ø:</strong> {file.type}</p>
                                <p><strong>–†–∞–∑–º–µ—Ä:</strong> {(file.size / 1024).toFixed(1)} KB</p>
                            </div>
                        )}

                        <Button
                            onClick={handleUpload}
                            disabled={!file || loading}
                            className="w-full"
                        >
                            {loading ? '–¢–µ—Å—Ç–∏—Ä—É–µ–º...' : '–ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–≥—Ä—É–∑–∫—É'}
                        </Button>
                    </div>

                    {/* Error Display */}
                    {error && (
                        <div className="p-4 bg-red-50 border border-red-200 rounded-lg">
                            <h3 className="font-semibold text-red-800">–û—à–∏–±–∫–∞:</h3>
                            <p className="text-red-700">{error}</p>
                        </div>
                    )}

                    {/* Result Display */}
                    {result && (
                        <div className="space-y-4">
                            <div className="p-4 bg-green-50 border border-green-200 rounded-lg">
                                <h3 className="font-semibold text-green-800 mb-3">‚úÖ –£—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ!</h3>

                                <div className="grid grid-cols-2 gap-4 mb-4">
                                    <div>
                                        <p><strong>–§–∞–π–ª:</strong> {result.fileName}</p>
                                        <p><strong>–¢–∏–ø:</strong> {result.fileType}</p>
                                        <p><strong>–†–∞–∑–º–µ—Ä:</strong> {(result.fileSize / 1024).toFixed(1)} KB</p>
                                    </div>
                                    <div>
                                        <p><strong>–¢–µ–∫—Å—Ç:</strong> {result.contentLength} —Å–∏–º–≤–æ–ª–æ–≤</p>
                                        <p><strong>HTML:</strong> {result.htmlContentLength} —Å–∏–º–≤–æ–ª–æ–≤</p>
                                        <p><strong>–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:</strong> {result.hasHtml ? '‚úÖ –ï—Å—Ç—å' : '‚ùå –ù–µ—Ç'}</p>
                                    </div>
                                </div>

                                {result.metadata && (
                                    <div className="mb-4">
                                        <strong>–ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ:</strong>
                                        <pre className="text-xs bg-gray-100 p-2 rounded mt-1">
                                            {JSON.stringify(result.metadata, null, 2)}
                                        </pre>
                                    </div>
                                )}

                                <div>
                                    <strong>–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä —Ç–µ–∫—Å—Ç–∞:</strong>
                                    <pre className="text-xs bg-gray-100 p-3 rounded mt-1 whitespace-pre-wrap max-h-40 overflow-y-auto">
                                        {result.contentPreview}
                                    </pre>
                                </div>
                            </div>
                        </div>
                    )}

                    {/* Instructions */}
                    <div className="p-4 bg-blue-50 border border-blue-200 rounded-lg">
                        <h3 className="font-semibold text-blue-800 mb-2">üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:</h3>
                        <ul className="text-sm text-blue-700 space-y-1">
                            <li>‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ñ–∞–π–ª—ã: .docx, .pptx, .xlsx, .pdf</li>
                            <li>‚Ä¢ –¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Ç–æ–ª—å–∫–æ –ø–∞—Ä—Å–∏–Ω–≥ —Ñ–∞–π–ª–æ–≤</li>
                            <li>‚Ä¢ –§–∞–π–ª—ã –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö</li>
                            <li>‚Ä¢ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è</li>
                        </ul>
                    </div>
                </CardContent>
            </Card>
        </div>
    )
}
