#!/usr/bin/env node

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env —Ñ–∞–π–ª–æ–≤
require('dotenv').config({ path: '.env.local' })
require('dotenv').config({ path: '.env' })

console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è...\n')

const requiredVars = [
    'DATABASE_URL',
    'NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY',
    'CLERK_SECRET_KEY',
    'GEMINI_API_KEY'
]

let allGood = true

requiredVars.forEach(varName => {
    const value = process.env[varName]
    if (value) {
        if (varName.includes('KEY') || varName.includes('SECRET')) {
            // –°–∫—Ä—ã–≤–∞–µ–º –∫–ª—é—á–∏
            const masked = value.substring(0, 10) + '...' + value.substring(value.length - 10)
            console.log(`‚úÖ ${varName}: ${masked}`)
        } else {
            console.log(`‚úÖ ${varName}: ${value}`)
        }
    } else {
        console.log(`‚ùå ${varName}: –ù–ï –ù–ê–ô–î–ï–ù`)
        allGood = false
    }
})

console.log('\n' + '='.repeat(50))

if (allGood) {
    console.log('üéâ –í—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã!')
} else {
    console.log('‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã.')
    console.log('–°–∫–æ–ø–∏—Ä—É–π—Ç–µ env.example –≤ .env.local –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏—è.')
}

console.log('\nüìÅ –ù–∞–π–¥–µ–Ω–Ω—ã–µ .env —Ñ–∞–π–ª—ã:')
const fs = require('fs')
const envFiles = ['.env.local', '.env', 'env.example']
envFiles.forEach(file => {
    if (fs.existsSync(file)) {
        console.log(`‚úÖ ${file}`)
    } else {
        console.log(`‚ùå ${file}`)
    }
})
